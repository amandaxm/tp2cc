name: Construir e Enviar Imagens Docker

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checar código
      uses: actions/checkout@v2

    - name: Determinar alterações em gerador_regras_ml
      id: diff_gerador_regras
      run: |
        if [[ "$(git rev-list --count ${{ github.sha }})" -eq 1 ]]; then
          DIFF=$(git diff --name-only ${{ github.sha }})
        else
          DIFF=$(git diff --name-only HEAD^ HEAD)

        # Checar se há alterações nos arquivos relevantes
        if echo "$DIFF" | grep -E "(^|/)gerador_regras/|^Dockerfile"; then
          echo "::set-output name=changes_gerador_regras::true"
        else
          echo "::set-output name=changes_gerador_regras::false"
        fi

    - name: Determinar alterações em playlist_api
      id: diff_playlist_api
      run: |
        if [[ "$(git rev-list --count ${{ github.sha }})" -eq 1 ]]; then
          DIFF=$(git diff --name-only ${{ github.sha }})
        else
          DIFF=$(git diff --name-only HEAD^ HEAD)

        # Checar se há alterações nos arquivos relevantes
        if echo "$DIFF" | grep -E "(^|/)api/|^Dockerfile"; then
          echo "::set-output name=changes_playlist_api::true"
        else
          echo "::set-output name=changes_playlist_api::false"
        fi

    - name: Construir e Enviar Imagem Docker para gerador_regras_ml
      if: steps.diff_gerador_regras.outputs.changes_gerador_regras == 'true'
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gerador_regras_ml:latest ./gerador_regras
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gerador_regras_ml:latest

    - name: Construir e Enviar Imagem Docker para playlist_api
      if: steps.diff_playlist_api.outputs.changes_playlist_api == 'true'
      run: |
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/playlist_api:latest ./api
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/playlist_api:latest
