name: Build and Push Docker Images

on:
  push:
    branches:
      - master
    paths:
      - 'api/**'
      - 'gerador_regras/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Incrementar a versão e salvar no deployment.yaml
        run: |
          # Incrementar a versão
          VERSAO_ATUAL=$(cat version.txt)
          NOVA_VERSAO=$(python -c "print('.'.join(str(int(x) + 1) for x in '$VERSAO_ATUAL'.split('.')))")
          echo "$NOVA_VERSAO" > version.txt
          echo "Versão incrementada para $NOVA_VERSAO"

          # Atualizar a versão no deployment.yaml
          sed -i "s/^version: .*/version: $NOVA_VERSAO/" ./deployment.yaml

          # Adicionar a data do push no formato de timestamp
          DATE_PUSH=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          sed -i "s/^date_push: .*/date_push: \"$DATE_PUSH\"/" ./deployment.yaml

          # Configurar a identidade do usuário para o commit
          git config user.email "amandaxaviermariano10@gmail.com"
          git config user.name "amandaxm"

          # Confirmar as alterações no version.txt
          git add .
          git commit -m "Incrementar versão para $NOVA_VERSAO"
          git push

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build and push Docker image for gerador_regras_ml
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gerador_regras_ml:latest ./gerador_regras
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gerador_regras_ml:latest

      - name: Build and push Docker image for playlist_api
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/playlist_api:latest ./api
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/playlist_api:latest

